(function () {
  // Find the document that actually contains the "zaznamy" table.
  function findDocumentWithTable() {
    // Check current document first.
    if (document.querySelector('table.zaznamy')) {
      return document;
    }
    // Otherwise scan frames/iframes.
    for (const frame of document.querySelectorAll('frame, iframe')) {
      let doc;
      try {
        doc = frame.contentDocument || frame.contentWindow.document;
      } catch (e) {
        continue; // skip if cross‑origin
      }
      if (doc && doc.querySelector('table.zaznamy')) {
          return doc;
      }
    }
    return document; // fallback
  }

  const doc = findDocumentWithTable();
  const data = [];

  // Retrieve the room value if present.
  const roomInput = doc.querySelector('input[name="mistnost"]');
  const roomValue = roomInput && roomInput.value ? roomInput.value.trim() : '';
  if (roomValue) {
    data.push([roomValue, `Místnost: ${roomValue};`]);
  }

  // Locate the table containing the asset records.
  const table = doc.querySelector('table.zaznamy');
  if (!table) {
    console.error('Table with class "zaznamy" not found.');
    return;
  }

  // Extract data from rows that have at least 5 <td> elements.
  table.querySelectorAll('tr').forEach(row => {
    const cells = row.querySelectorAll('td');
    if (cells.length > 4) {
      const osoba = cells[2].innerText.trim();
      const evidencni = cells[3].innerText.trim();
      const nazev = cells[4].innerText.trim();
      if (evidencni && osoba && nazev) {
        data.push([evidencni, osoba, nazev]);
      }
    }
  });

  console.log('Data found:', data);

  if (!data.length) {
    console.log('No data entries found.');
    return;
  }

  // Create CSV and trigger download.
  const csvContent = data.map(row => row.join(';')).join('\n');
  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
  const fileName = `evidencni_cisla_${roomValue || 'vse'}.csv`.replace(/[^a-zA-Z0-9._-]/g, '_');
  if (navigator.msSaveBlob) {
    // Support for IE
    navigator.msSaveBlob(blob, fileName);
  } else {
    const link = document.createElement('a');
    link.href = URL.createObjectURL(blob);
    link.download = fileName;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(link.href);
  }
})();